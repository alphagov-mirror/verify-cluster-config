---
global:
  cloudHsm:
    enabled: true
    ip: "10.255.151.206"

# whitelist of services external from the cluster
# that we allow egress traffic to.
# see https://istio.io/docs/reference/config/networking/v1alpha3/service-entry/#ServiceEntry
# for the format of the `service` block
egressSafelist:
- name: stub-connector
  service:
    hosts: ["test-connector.london.verify.govsvc.uk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: hub-integration
  service:
    hosts: ["www.integration.signin.service.gov.uk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: test-intgegration
  service:
    hosts: ["test-integration-connector.london.verify.govsvc.uk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: nl-integration
  service:
    hosts: ["acc-eidas.minez.nl"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: dk-integration
  service:
    hosts: ["eidasconnector.test.eid.digst.dk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: hub-prod
  service:
    hosts: ["www.signin.service.gov.uk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: nl-prod
  service:
    hosts: ["eidas.minez.nl"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: dk-prod
  service:
    hosts: ["eidasconnector.eid.digst.dk"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: sqs-eu-west-2
  service:
    hosts: ["sqs.eu-west-2.amazonaws.com", "eu-west-2.queue.amazonaws.com"]
    ports:
    - name: https
      number: 443
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: DNS
- name: rds-eu-west-2
  service:
    hosts: ["*.eu-west-2.rds.amazonaws.com"]
    addresses: ["10.0.0.0/8"]
    ports:
    - name: postgres
      number: 5432
      protocol: TLS
    location: MESH_EXTERNAL
    resolution: NONE
- name: ocsp
  service:
    hosts: ["std-ocsp.trustwise.com"]
    ports:
    - name: http
      number: 80
      protocol: HTTP
    location: MESH_EXTERNAL
    resolution: DNS

namespaces:
- name: verify-main

- name: verify-connector-node-metadata
  owner: alphagov
  repository: verify-metadata
  branch: master
  path: ci/verify
  requiredApprovalCount: 2

- name: verify-metadata-controller
  owner: alphagov
  repository: verify-metadata-controller
  branch: master
  path: ci/verify
  permittedRolesRegex: "^$"
  requiredApprovalCount: 2
  scope: cluster

- name: verify-proxy-node-build
  owner: alphagov
  repository: verify-proxy-node
  path: ci/build
  requiredApprovalCount: 2
- name: verify-proxy-node-integration
  owner: alphagov
  repository: verify-proxy-node
  path: ci/integration
  requiredApprovalCount: 2
- name: verify-proxy-node-prod
  owner: alphagov
  repository: verify-proxy-node
  path: ci/prod
  requiredApprovalCount: 2

- name: verify-doc-checking-staging
  owner: alphagov
  repository: doc-checking
  branch: OGD-321/fix-egress-for-ocsp
  path: ci/staging 
  permittedRolesRegex: "^$"
  requiredApprovalCount: 0
- name: verify-doc-checking-test
  owner: alphagov
  repository: doc-checking
  branch: master
  path: ci/test
  permittedRolesRegex: "^$"
  requiredApprovalCount: 2
- name: verify-doc-checking-prod
  owner: alphagov
  repository: doc-checking
  branch: master
  path: ci/prod
  permittedRolesRegex: "^$"
  requiredApprovalCount: 2
- name: verify-doc-checking-build
  owner: alphagov
  repository: doc-checking
  branch: master
  path: ci/build
  permittedRolesRegex: "^$"
  requiredApprovalCount: 0
